{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Mucry application API",
    "description" : "This is the murcy application API\n",
    "contact" : {
      "email" : "murcyapplication@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://unizar-30248-2019-murcy.herokuapp.com/api",
    "description" : "Production server (uses live data)"
  }, {
    "url" : "https://preunizar-30248-2019-murcy.herokuapp.com/api",
    "description" : "PreProduction server"
  }, {
    "url" : "http:/localhost:8080/api",
    "description" : "Local develop"
  } ],
  "tags" : [ {
    "name" : "user",
    "description" : "Everything about users"
  }, {
    "name" : "quiz",
    "description" : "Everything about quizes"
  }, {
    "name" : "questions",
    "description" : "Everything about questions"
  } ],
  "paths" : {
    "/test" : {
      "get" : {
        "responses" : {
          "201" : {
            "description" : "User logged in"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "Create user in the system",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User logged in",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Auth"
                }
              }
            }
          },
          "400" : {
            "description" : "User already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Log in in the app",
        "description" : "Logs in in the application if the credentials are true",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User logged in",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Auth"
                }
              }
            }
          },
          "400" : {
            "description" : "User should change his password before logging in",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid email, invalid password (or not confirmed user)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Log out in the app",
        "description" : "Logs in in the application if the credentials are true",
        "responses" : {
          "201" : {
            "description" : "User loggout succesfully"
          },
          "401" : {
            "description" : "Invalid email, invalid password (or not confirmed user)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Auth" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "body" : {
        "required" : [ "email", "password", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "Username"
          },
          "password" : {
            "type" : "string",
            "description" : "Password"
          },
          "email" : {
            "type" : "string",
            "description" : "User email"
          }
        }
      },
      "body_1" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "Username of the user to log in"
          },
          "password" : {
            "type" : "string",
            "description" : "Password of the user to log in"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}